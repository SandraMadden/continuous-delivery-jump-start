buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.2'
		classpath 'org.hidetake:gradle-ssh-plugin:0.4.5'
    }
}

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.tomcat'

apply from: "$rootDir/gradle/unit-test.gradle"
apply from: "$rootDir/gradle/integration-test.gradle"
apply from: "$rootDir/gradle/code-quality.gradle"
apply from: "$rootDir/gradle/code-coverage.gradle"
apply from: "$rootDir/gradle/vagrant.gradle"

group = 'org.gradle.training'

version = new ProjectVersion(1, 2, new Date().format('HHmmss').toString())

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.springframework:spring-webmvc:4.1.1.RELEASE'
    compile 'org.apache.httpcomponents:httpclient:4.3.6'
    compile 'commons-io:commons-io:2.4'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    providedCompile 'javax.servlet:servlet-api:2.5'
    runtime 'jstl:jstl:1.2'
    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.10.8'


    def tomcatVersion = '7.0.62'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tomcat {
    contextPath = 'sample-app'
	httpPort = 9090
}

task printVersion {
    doLast {
        println "Project version: $project.version"
    }
}

import groovy.transform.TupleConstructor

@TupleConstructor
class ProjectVersion {
    final Integer major
    final Integer minor
    final String build

    @Override
    String toString() {
        String fullVersion = "$major.$minor"

        if(build) {
            fullVersion += ".$build"
        }

        fullVersion
    }
}